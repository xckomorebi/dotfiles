# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  TERM: xterm-256color
  # WINIT_X11_SCALE_FACTOR: "1.0"

window:
  dimensions:
    # columns: 90
    # lines: 45
    columns: 42
    lines: 13

  padding:
    x: 2
    y: 2

  dynamic_padding: false
  decorations: buttonless
  opacity: 0.0
  # opacity: 0.64


scrolling:
  history: 10000
  multiplier: 3

font:
  normal:
    family: "DejaVu Sans Mono for Powerline"
    style: Book

  bold:
    family: "DejaVu Sans Mono for Powerline"
    style: Bold

  italic:
    family: "DejaVu Sans Mono for Powerline"
    style: Oblique

  size: 14.0

  offset:
    x: 0
    y: 0

  glyph_offset:
    x: 0
    y: 0

  debug:
    persistent_logging: false

## If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

## Colors (Solarized dark)
colors:
  bright:
    black: '#535353'
    blue: '#6fbce2'
    cyan: '#96dcdb'
    green: '#a3cca2'
    magenta: '#e586e7'
    red: '#e4859b'
    white: '#dfdfdf'
    yellow: '#e1e487'
  cursor:
    cursor: '#bbbbbb'
    text: '#ffffff'
  normal:
    black: '#353535'
    blue: '#449fd0'
    cyan: '#65aaaf'
    green: '#89d287'
    magenta: '#da62dc'
    red: '#e74669'
    white: '#b4b4b4'
    yellow: '#dab853'
  primary:
    # background: '#000000'
    foreground: '#c8c8c8'
  selection:
    background: '#e6e6e6'
    text: '#000000'

mouse:
  hints:
   launcher:
     program: open
   modifiers: None

selection:
  save_to_clipboard: false

cursor:
  style:
    shape: Block
    unfocused_hollow: true
    blinking: On

  blink_interval: 750

shell:
  program: /bin/zsh
  args:
    - -c
    - "/opt/homebrew/bin/tty-clock -C 6 -cB && exec zsh -l"

## Key bindings
##
## Key bindings are specified as a list of objects. Each binding will specify a
## key and modifiers required to trigger it, terminal modes where the binding is
## applicable, and what should be done when the key binding fires. It can either
## send a byte sequence to the running application (`chars`), execute a
## predefined action (`action`) or fork and execute a specified command plus
## arguments (`command`).
##
## Bindings are always filled by default, but will be replaced when a new binding
## with the same triggers is defined. To unset a default binding, it can be
## mapped to the `None` action.
##
## Example:
##   `- { key: V, mods: Control|Shift, action: Paste }`
##
## Available fields:
##   - key
##   - mods (optional)
##   - chars | action | command (exactly one required)
##   - mode (optional)
##
## Values for `key`:
##   - `A` -> `Z`
##   - `F1` -> `F12`
##   - `Key1` -> `Key0`
##
##   A full list with available key codes can be found here:
##   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
##
##   Instead of using the name of the keys, the `key` field also supports using
##   the scancode of the desired key. Scancodes have to be specified as a
##   decimal number.
##   This command will allow you to display the hex scancodes for certain keys:
##     `showkey --scancodes`
##
## Values for `mods`:
##   - Command
##   - Control
##   - Super
##   - Shift
##   - Alt
##
##   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
##   Whitespace and capitalization is relevant and must match the example.
##
## Values for `chars`:
##   The `chars` field writes the specified string to the terminal. This makes
##   it possible to pass escape sequences.
##   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
##   the command `showkey -a` outside of tmux.
##   Note that applications use terminfo to map escape sequences back to
##   keys. It is therefore required to update the terminfo when
##   changing an escape sequence.
##
## Values for `action`:
##   - Paste
##   - PasteSelection
##   - Copy
##   - IncreaseFontSize
##   - DecreaseFontSize
##   - ResetFontSize
##   - ScrollPageUp
##   - ScrollPageDown
##   - ScrollToTop
##   - ScrollToBottom
##   - ClearHistory
##   - Hide
##   - Quit
##   - ClearLogNotice
##   - SpawnNewInstance
##   - None
##
## Values for `command`:
##   The `command` field must be a map containing a `program` string and
##   an `args` array of command line parameter strings.
##
##   Example:
##       `command: { program: "alacritty", args: ["-e", "vttest"] }`
##
## Values for `mode`:
##   - ~AppCursor
##   - AppCursor
##   - ~AppKeypad
##   - AppKeypad

key_bindings:
 - { key: Back,   mods: Alt,     chars: "\x1b\x7f"        }
 - { key: Back,   mods: command, chars: "\x15"            }

 - { key: Slash,      mods: command,  chars: "\x67\x63\x63"}
 - { key: P,          mods: command,  chars: "\x5C\x66\x66"}
 - { key: B,          mods: command,  chars: "\x3a\x4e\x45\x52\x44\x54\x72\x65\x65\x54\x6f\x67\x67\x6c\x65\x0A"}
 - { key: U,          mods: command,  command: {program: "sh", args: ["-c", "~/bin/toggle_alacritty_opacitty"]}}


 # (macOS only)
 # - { key: Key0,   mods: Command, action: ResetFontSize    }
 # - { key: Equals, mods: Command, action: IncreaseFontSize }
 # - { key: Minus,  mods: Command, action: DecreaseFontSize }
 # - { key: K,      mods: Command, action: ClearHistory     }
 # - { key: K,      mods: Command, chars: "\x0c"            }
 # - { key: V,      mods: Command, action: Paste            }
 # - { key: C,      mods: Command, action: Copy             }
 # - { key: H,      mods: Command, action: Hide             }
 # - { key: Q,      mods: Command, action: Quit             }
 # - { key: W,      mods: Command, action: Quit             }
 # - { key: N,      mods: Command, action: CreateNewWindow  }
 # - { key: Copy, action: Copy }
 # - { key: L, mods: Control, action: ClearLogNotice }
 # - { key: L, mods: Control, chars: "\x0c" }
 # - { key: Home, chars: "\x1bOH", mode: AppCursor }
 # - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
 # - { key: End, chars: "\x1bOF", mode: AppCursor }
 # - { key: End, chars: "\x1b[F", mode: ~AppCursor }
 # - { key: PageUp, mods: Shift, action: ScrollPageUp, mode: ~Alt }
 # - { key: PageUp, mods: Shift, chars: "\x1b[5;2~", mode: Alt }
 # - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
 # - { key: PageUp, chars: "\x1b[5~" }
 # - { key: PageDown, mods: Shift, action: ScrollPageDown, mode: ~Alt }
 # - { key: PageDown, mods: Shift, chars: "\x1b[6;2~", mode: Alt }
 # - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
 # - { key: PageDown, chars: "\x1b[6~" }
 # - { key: Tab, mods: Shift, chars: "\x1b[Z" }
 # - { key: Back, chars: "\x7f" }
 # - { key: Back, mods: Alt, chars: "\x1b\x7f" }
 # - { key: Insert, chars: "\x1b[2~" }
 # - { key: Delete, chars: "\x1b[3~" }
 # - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
 # - { key: Left, mods: Control, chars: "\x1b[1;5D" }
 # - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
 # - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
 # - { key: Left, chars: "\x1bOD", mode: AppCursor }
 # - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
 # - { key: Right, mods: Control, chars: "\x1b[1;5C" }
 # - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
 # - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
 # - { key: Right, chars: "\x1bOC", mode: AppCursor }
 # - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
 # - { key: Up, mods: Control, chars: "\x1b[1;5A" }
 # - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
 # - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
 # - { key: Up, chars: "\x1bOA", mode: AppCursor }
 # - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
 # - { key: Down, mods: Control, chars: "\x1b[1;5B" }
 # - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
 # - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
 # - { key: Down, chars: "\x1bOB", mode: AppCursor }
 #  - { key: F1, chars: "\x1bOP" }
 #  - { key: F2, chars: "\x1bOQ" }
 #  - { key: F3, chars: "\x1bOR" }
 #  - { key: F4, chars: "\x1bOS" }
 #  - { key: F5, chars: "\x1b[15~" }
 #  - { key: F6, chars: "\x1b[17~" }
 #  - { key: F7, chars: "\x1b[18~" }
 #  - { key: F8, chars: "\x1b[19~" }
 #  - { key: F9, chars: "\x1b[20~" }
 #  - { key: F10, chars: "\x1b[21~" }
 #  - { key: F11, chars: "\x1b[23~" }
 #  - { key: F12, chars: "\x1b[24~" }
 #  - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
 #  - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
 #  - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
 #  - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
 #  - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
 #  - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
 #  - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
 #  - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
 #  - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
 #  - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
 #  - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
 #  - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
 #  - { key: F1, mods: Control, chars: "\x1b[1;5P" }
 #  - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
 #  - { key: F3, mods: Control, chars: "\x1b[1;5R" }
 #  - { key: F4, mods: Control, chars: "\x1b[1;5S" }
 #  - { key: F5, mods: Control, chars: "\x1b[15;5~" }
 #  - { key: F6, mods: Control, chars: "\x1b[17;5~" }
 #  - { key: F7, mods: Control, chars: "\x1b[18;5~" }
 #  - { key: F8, mods: Control, chars: "\x1b[19;5~" }
 #  - { key: F9, mods: Control, chars: "\x1b[20;5~" }
 #  - { key: F10, mods: Control, chars: "\x1b[21;5~" }
 #  - { key: F11, mods: Control, chars: "\x1b[23;5~" }
 #  - { key: F12, mods: Control, chars: "\x1b[24;5~" }
 #  - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
 #  - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
 #  - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
 #  - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
 #  - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
 #  - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
 #  - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
 #  - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
 #  - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
 #  - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
 #  - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
 #  - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
 #  - { key: F1, mods: Super, chars: "\x1b[1;3P" }
 #  - { key: F2, mods: Super, chars: "\x1b[1;3Q" }
 #  - { key: F3, mods: Super, chars: "\x1b[1;3R" }
 #  - { key: F4, mods: Super, chars: "\x1b[1;3S" }
 #  - { key: F5, mods: Super, chars: "\x1b[15;3~" }
 #  - { key: F6, mods: Super, chars: "\x1b[17;3~" }
 #  - { key: F7, mods: Super, chars: "\x1b[18;3~" }
 #  - { key: F8, mods: Super, chars: "\x1b[19;3~" }
 #  - { key: F9, mods: Super, chars: "\x1b[20;3~" }
 #  - { key: F10, mods: Super, chars: "\x1b[21;3~" }
 #  - { key: F11, mods: Super, chars: "\x1b[23;3~" }
 #  - { key: F12, mods: Super, chars: "\x1b[24;3~" }
 #  - { key: NumpadEnter, chars: "\n" }
